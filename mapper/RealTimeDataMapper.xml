<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloudinnov.yun.openapi.dao.RealTimeDataDao">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache">
		<property name="timeToIdleSeconds" value="3600" /><!--1 hour -->
		<property name="timeToLiveSeconds" value="3600" /><!--1 hour -->
		<property name="maxEntriesLocalHeap" value="1000" />
		<property name="maxEntriesLocalDisk" value="10000000" />
		<property name="memoryStoreEvictionPolicy" value="LRU" />
	</cache>
	<resultMap id="BaseResultMap" type="com.cloudinnov.yun.openapi.model.RealTimeData">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="value" property="value" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, code, value, time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from real_time_data
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		real_time_data
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.cloudinnov.yun.openapi.model.RealTimeData">
		insert into real_time_data
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="value != null">
				value,
			</if>
			<if test="time != null">
				time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				#{value,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cloudinnov.yun.openapi.model.RealTimeData">
		update real_time_data
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				value = #{value,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cloudinnov.yun.openapi.model.RealTimeData">
		update
		real_time_data
		set code = #{code,jdbcType=VARCHAR},
		value =
		#{value,jdbcType=VARCHAR},
		time = #{time,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>


	<insert id="insertRealtimeList" parameterType="java.util.List">

		insert into ${tableName} (code, value,
		time) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.code,jdbcType=VARCHAR},#{item.value,jdbcType=VARCHAR},#{item.time,jdbcType=VARCHAR})
		</foreach>

	</insert>
	<select id="selectHistoryData" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT value,time from real_time_data where code = #{code,jdbcType=VARCHAR}	
		 AND  time &gt;= #{startTime,jdbcType=VARCHAR}
		 AND  time &lt;= #{endTime,jdbcType=VARCHAR}
	</select>
	
	
</mapper>